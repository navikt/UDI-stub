version: 2.1

defaults:
  docker:
    - image: circleci/openjdk:8-jdk
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          name: Create workspace
          command: mkdir -p /tmp/workspace
      - restore_cache:
          key: udi-stub-{{ checksum "pom.xml" }}
      #      - run:
      #          mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: udi-stub-{{ checksum "pom.xml" }}
      - run: mvn package
      - store_test_results:
          path: target/surefire-reports
      - run:
          name: Copy cloud jar to workspace
          command: cp udi-cloud/target/*.jar /tmp/workspace
      - run:
          name: Copy core jar to workspace
          command: cp udi-core/target/*.jar /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths: '*.jar'

      - store_artifacts:
          path: udi-cloud/target/*.jar
          destination: udi-stub.jar

  release:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy jar to expected path
          command: |
            cp /tmp/workspace/*.jar .
      - run:
          name: List jar files
          command: |
            ls -lah
      - run:
          name: Build and push to docker hub
          command: |
            VERSION="$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)"
            GIT_HASH="$(git rev-parse HEAD)"
            echo "Extracted version = \"$VERSION\""
            echo "Extracted git hash = \"$GIT_HASH\""
            docker build -t hub.docker.com/navikt/udi-stub/app:latest -f Dockerhub.dockerfile .
            echo "$DOCKER_PASSWORD" | docker login hub.docker.com -u "$DOCKER_USERNAME" --password-stdin
            docker push hub.docker.com/navikt/udi-stub/app:latest
  deploy_preprod:
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      - DOCKER_IMG_NAME: navikt/udi-stub
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "4e:8f:f6:8d:bb:77:2a:54:f6:a7:17:45:59:62:af:2c"
      - run:
          name: Create deployment request for development
          command: |
            NAIS="$(cat nais.yaml)"
            curl \
                -X POST \
                -d '{
                        "ref": "master",
                        "description": "Automated deployment request from our pretty pipeline",
                        "environment": "dev-fss",
                        "payload": {
                            "version": [1, 0, 0],
                            "team": "Synt",
                            "kubernetes": {
                                "resources": [
                                    \"$NAIS\"
                                ],
                            }
                        }
                    }' \
                -H "Accept: application/vnd.github.ant-man-preview+json" \
                -u $GITHUB_USERNAME:GITHUB_DEPLOY_TOKEN \
                https://api.github.com/repos/navikt/udi-stub/deployments

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy_preprod:
          requires:
            - release
          filters:
            branches:
              only: master